version: "3.7"

services:
  nginx:
    image: umputun/nginx-le:latest
    hostname: nginx
    restart: always
    container_name: nginx
    logging:
      driver: json-file
      options:
          max-size: "10m"
          max-file: "5"
    volumes:
        - ./etc/ssl:/etc/nginx/ssl
        - ./etc/nginx/service.conf:/etc/nginx/service.conf
    depends_on:
      - app
    ports:
{% if app_env == 'local' %}
      - "8090:8080"
{% else %}
      - "80:80"
      - "443:443"
{% endif %}
    networks:
      - frontend
    environment:
      - TZ=America/Chicago
{% if app_env != 'local' %}
      - LETSENCRYPT=true
{% else %}
      - LETSENCRYPT=false
{% endif %}
      - LE_EMAIL=techops@obada.io
      - LE_FQDN={{ rd_fqdn }}

  app:
    image: obada/reference-design:develop
    container_name: reference-design
    user: ${UID}:${GID}
    volumes:
{% if app_env == 'local' %}
      - ./src:/app
{% endif %}
      - ./etc/.env:/app/.env
    restart: always
    depends_on:
      - db
    networks:
      - backend
      - frontend

  ipfs:
    image: ipfs/go-ipfs:latest
    container_name: ipfs
    restart: always
    volumes:
      - ./ipfs/export:/export
      - ./ipfs/data:/data/ipfs
    ports:
      - "4001:4001"
      - "4002:4001/udp" 
      - "8080:8080"
      - "127.0.0.1:5001:5001"
    networks:
      - frontend
      - backend

  client-helper:
    image: obada/client-helper:develop
    container_name: client-helper
    restart: always
    user: ${UID}:${GID}
    volumes:
      - ./client-helper/data:/home/obada/data
      - ./client-helper/keys:/home/obada/keys
    environment:
      - DB_PATH=/home/obada/data
      - IPFS_RPC_URL=ipfs:5001
      - NODE_RPC_URL=tcp://node.alpha.obada.io:26657
    networks:
      - backend

  db:
    image: mysql:8
    container_name: db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD={{ db_password }}
      - MYSQL_DATABASE=reference-design
    ports:
      - 127.0.0.1:3306:3306
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend

networks:
  backend:
  frontend:

volumes:
  db_data: {}
